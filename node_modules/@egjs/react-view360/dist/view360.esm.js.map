{"version":3,"file":"view360.esm.js","sources":["../src/consts.ts","../src/PanoViewer.tsx","../src/SpinViewer.tsx"],"sourcesContent":["/*\n * Copyright (c) 2017 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { PanoViewerProps, SpinViewerProps } from \"./types\";\n\nexport const PANOVIEWER_DEFAULT_PROPS: PanoViewerProps = {\n  tag: \"div\",\n  onReady: () => {},\n  onViewChange: () => {},\n  onAnimationEnd: () => {},\n  onError: () => {}\n};\n\nexport const SPINVIEWER_DEFAULT_PROPS: SpinViewerProps = {\n  tag: \"div\",\n  onLoad: () => {},\n  onImageError: () => {},\n  onChange: () => {},\n  onAnimationEnd: () => {}\n};\n","/*\n * Copyright (c) 2017 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport * as React from \"react\";\nimport {\n  PanoViewer as VanillaPanoViewer,\n  PanoViewerOptions,\n  withPanoViewerMethods,\n  PANOVIEWER_EVENTS,\n  PANOVIEWER_OPTIONS,\n  updatePanoViewer,\n  DEFAULT_CANVAS_CLASS\n} from \"@egjs/view360\";\n\nimport { PANOVIEWER_DEFAULT_PROPS } from \"./consts\";\nimport { PanoViewerProps } from \"./types\";\n\ntype PanoViewerPropsAndOptions = Partial<PanoViewerProps & PanoViewerOptions>;\n\nclass PanoViewer extends React.PureComponent<PanoViewerPropsAndOptions> {\n  public static defaultProps: PanoViewerProps = PANOVIEWER_DEFAULT_PROPS;\n\n  @withPanoViewerMethods private _vanillaPanoViewer: VanillaPanoViewer;\n  private _containerEl: HTMLElement;\n  private _prevProps: Partial<PanoViewerProps & PanoViewerOptions>;\n  private _canvasKey: number;\n\n  public get element() { return this._containerEl; }\n\n  public constructor(props: PanoViewerPropsAndOptions) {\n    super(props);\n\n    this._canvasKey = -1;\n  }\n\n  public componentDidMount() {\n    const props = { ...this.props };\n\n    this._vanillaPanoViewer = new VanillaPanoViewer(\n      this._containerEl,\n      props\n    );\n    this._prevProps = props;\n\n    this._bindEvents();\n  }\n\n  public componentWillUnmount() {\n    this._vanillaPanoViewer.destroy();\n  }\n\n  public componentWillUpdate(nextProps: PanoViewerPropsAndOptions) {\n    const props = this.props;\n\n    if ((nextProps.image != null && nextProps.image !== props.image)\n      || (nextProps.video != null && nextProps.video !== props.video)) {\n      // Re-generate canvas\n      this._canvasKey = this._generateCanvasKey();\n    }\n  }\n\n  public componentDidUpdate() {\n    const props = this.props;\n    const lastProps = this._prevProps;\n    const panoViewer = this._vanillaPanoViewer;\n\n    updatePanoViewer(panoViewer, props, lastProps);\n\n    this._prevProps = { ...props };\n  }\n\n  public render() {\n    const props = this.props;\n    const Container = props.tag as any;\n    const canvasClass = props.canvasClass ?? DEFAULT_CANVAS_CLASS;\n    const attributes: { [key: string]: any } = {};\n\n    for (const name in props) {\n      if (!(name in PANOVIEWER_DEFAULT_PROPS) && !(name in PANOVIEWER_OPTIONS)) {\n        attributes[name] = props[name];\n      }\n    }\n\n    return <Container {...attributes} ref={(e?: HTMLElement) => {\n      e && (this._containerEl = e);\n    }}>\n      <canvas className={canvasClass} key={this._canvasKey} />\n      { this.props.children }\n    </Container>;\n  }\n\n  private _bindEvents() {\n    const panoViewer = this._vanillaPanoViewer;\n    const props = this.props as Required<PanoViewerProps>;\n\n    Object.keys(PANOVIEWER_EVENTS).forEach((eventKey: keyof typeof PANOVIEWER_EVENTS) => {\n      const eventName = PANOVIEWER_EVENTS[eventKey];\n      const propName = `on${eventName.charAt(0).toUpperCase() + eventName.slice(1)}`;\n\n      panoViewer.on(eventName, e => {\n        e.currentTarget = this;\n\n        props[propName](e);\n      });\n    });\n  }\n\n  private _generateCanvasKey() {\n    let newKey: number;\n    const oldKey = this._canvasKey;\n\n    do {\n      const array = new Uint32Array(1);\n      crypto.getRandomValues(array);\n      newKey = array[0];\n    } while (newKey === oldKey);\n\n    return newKey;\n  }\n}\n\ninterface PanoViewer extends React.Component<Partial<PanoViewerProps & PanoViewerOptions>>, VanillaPanoViewer { }\nexport default PanoViewer;\n","/*\n * Copyright (c) 2017 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable jsx-a11y/alt-text */\nimport * as React from \"react\";\nimport {\n  SpinViewer as VanillaSpinViewer,\n  SpinViewerOptions,\n  SPINVIEWER_EVENTS,\n  SPINVIEWER_OPTIONS,\n  DEFAULT_IMAGE_CLASS,\n  DEFAULT_WRAPPER_CLASS,\n  withSpinViewerMethods\n} from \"@egjs/view360\";\n\nimport { SPINVIEWER_DEFAULT_PROPS } from \"./consts\";\nimport { SpinViewerProps } from \"./types\";\n\nclass SpinViewer extends React.PureComponent<Partial<SpinViewerProps & SpinViewerOptions>> {\n  public static defaultProps: SpinViewerProps = SPINVIEWER_DEFAULT_PROPS;\n\n  @withSpinViewerMethods private _vanillaSpinViewer: VanillaSpinViewer;\n  private _containerEl: HTMLElement;\n  private _prevScale?: number;\n\n  public componentDidMount() {\n    const props = { ...this.props };\n\n    this._vanillaSpinViewer = new VanillaSpinViewer(\n      this._containerEl,\n      props\n    );\n    this._prevScale = props.scale;\n\n    this._bindEvents();\n  }\n\n  public componentDidUpdate() {\n    const props = this.props;\n    const prevScale = this._prevScale;\n    const spinViewer = this._vanillaSpinViewer;\n\n    if (props.scale != null && props.scale !== prevScale) {\n      spinViewer.setScale(props.scale);\n    }\n\n    this._prevScale = props.scale;\n  }\n\n  public render() {\n    const props = this.props;\n    const Container = props.tag as any;\n    const wrapperClass = props.wrapperClass ?? DEFAULT_WRAPPER_CLASS;\n    const imageClass = props.imageClass ?? DEFAULT_IMAGE_CLASS;\n    const attributes: { [key: string]: any } = {};\n\n    for (const name in props) {\n      if (!(name in SPINVIEWER_DEFAULT_PROPS) && !(name in SPINVIEWER_OPTIONS)) {\n        attributes[name] = props[name];\n      }\n    }\n\n    return <Container {...attributes} ref={(e?: HTMLElement) => {\n      e && (this._containerEl = e);\n    }}>\n      <div className={wrapperClass}>\n        <img className={imageClass} />\n      </div>\n      { this.props.children }\n    </Container>;\n  }\n\n  private _bindEvents() {\n    const spinViewer = this._vanillaSpinViewer;\n    const props = this.props as Required<SpinViewerProps>;\n\n    Object.keys(SPINVIEWER_EVENTS).forEach((eventKey: keyof typeof SPINVIEWER_EVENTS) => {\n      const eventName = SPINVIEWER_EVENTS[eventKey];\n      const propName = `on${eventName.charAt(0).toUpperCase() + eventName.slice(1)}`;\n\n      spinViewer.on(eventName, e => {\n        e.currentTarget = this;\n\n        props[propName](e);\n      });\n    });\n  }\n}\n\ninterface SpinViewer extends React.Component<Partial<SpinViewerProps & SpinViewerOptions>>, VanillaSpinViewer { }\nexport default SpinViewer;\n"],"names":["PANOVIEWER_DEFAULT_PROPS","tag","onReady","onViewChange","onAnimationEnd","onError","SPINVIEWER_DEFAULT_PROPS","onLoad","onImageError","onChange","__extends","props","_super","_this","_canvasKey","Object","_containerEl","_vanillaPanoViewer","VanillaPanoViewer","_prevProps","_bindEvents","destroy","nextProps","image","video","_generateCanvasKey","lastProps","panoViewer","updatePanoViewer","Container","canvasClass","DEFAULT_CANVAS_CLASS","attributes","name","PANOVIEWER_OPTIONS","React","ref","e","className","key","children","keys","PANOVIEWER_EVENTS","forEach","eventKey","eventName","propName","charAt","toUpperCase","slice","on","currentTarget","newKey","oldKey","array","Uint32Array","crypto","getRandomValues","PanoViewer","__decorate","withPanoViewerMethods","PureComponent","_vanillaSpinViewer","VanillaSpinViewer","_prevScale","scale","prevScale","spinViewer","setScale","wrapperClass","DEFAULT_WRAPPER_CLASS","imageClass","DEFAULT_IMAGE_CLASS","SPINVIEWER_OPTIONS","SPINVIEWER_EVENTS","SpinViewer","withSpinViewerMethods"],"mappings":"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"}